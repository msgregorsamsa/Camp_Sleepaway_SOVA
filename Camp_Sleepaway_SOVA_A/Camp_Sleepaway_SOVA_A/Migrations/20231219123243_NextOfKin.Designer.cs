// <auto-generated />
using System;
using Camp_Sleepaway_SOVA;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Camp_Sleepaway_SOVA.Migrations
{
    [DbContext(typeof(CampContext))]
    [Migration("20231219123243_NextOfKin")]
    partial class NextOfKin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Camp_Sleepaway_SOVA.Cabin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BedNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("Check_In")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Check_Out")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cabins");
                });

            modelBuilder.Entity("Camp_Sleepaway_SOVA.Counselor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CabinId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InChargeOf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OnCabinDuty")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CabinId")
                        .IsUnique()
                        .HasFilter("[CabinId] IS NOT NULL");

                    b.ToTable("Counselors");
                });

            modelBuilder.Entity("Camp_Sleepaway_SOVA.NextOfKin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CabinId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsICE")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NextOfKinId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CabinId");

                    b.HasIndex("NextOfKinId");

                    b.ToTable("NextOfKin");
                });

            modelBuilder.Entity("Camp_Sleepaway_SOVA.Counselor", b =>
                {
                    b.HasOne("Camp_Sleepaway_SOVA.Cabin", "Cabin")
                        .WithOne("Counselor")
                        .HasForeignKey("Camp_Sleepaway_SOVA.Counselor", "CabinId");

                    b.Navigation("Cabin");
                });

            modelBuilder.Entity("Camp_Sleepaway_SOVA.NextOfKin", b =>
                {
                    b.HasOne("Camp_Sleepaway_SOVA.Cabin", null)
                        .WithMany("Campers")
                        .HasForeignKey("CabinId");

                    b.HasOne("Camp_Sleepaway_SOVA.NextOfKin", null)
                        .WithMany("Campers")
                        .HasForeignKey("NextOfKinId");
                });

            modelBuilder.Entity("Camp_Sleepaway_SOVA.Cabin", b =>
                {
                    b.Navigation("Campers");

                    b.Navigation("Counselor")
                        .IsRequired();
                });

            modelBuilder.Entity("Camp_Sleepaway_SOVA.NextOfKin", b =>
                {
                    b.Navigation("Campers");
                });
#pragma warning restore 612, 618
        }
    }
}
